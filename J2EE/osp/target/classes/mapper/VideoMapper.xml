<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.njnu.dao.VideoMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.njnu.bean.Video" >
    <id column="video_id" property="videoId"/>
    <result column="chapter" property="chapter"/>
    <result column="video_name" property="videoName"/>
    <association property="course" javaType="cn.edu.njnu.bean.Course">
      <id column="course_id" property="courseId"/>
      <result column="course_name" property="courseName"/>
      <result column="introduction" property="introduction"/>
      <result column="note" property="note"/>
      <result column="stu_num" property="stuNum"/>
      <result column="course_state" property="state"/>
      <association property="category" javaType="cn.edu.njnu.bean.Category">
        <id column="category_id" property="categoryId"/>
        <result column="category" property="category"/>
      </association>
    </association>
  </resultMap>
  <sql id="Base_Column_List" >
    video_id, course.course_id course_id, chapter, video_name, course_name,
    category.category_id category_id, introduction, note, stu_num,
    course.state course_state, category
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from video
    join course on video.course_id = course.course_id
    join category on course.category_id = category.category_id
    where video_id = #{videoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from video
    where video_id = #{videoId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.njnu.bean.Video" >
    insert into video (video_id, course_id, chapter,
      video_name)
    values (#{videoId,jdbcType=INTEGER}, #{course.courseId,jdbcType=INTEGER}, #{chapter,jdbcType=VARCHAR},
      #{videoName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.njnu.bean.Video" >
    insert into video
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="videoId != null" >
        video_id,
      </if>
      <if test="course!=null&amp;&amp;course.courseId != null" >
        course_id,
      </if>
      <if test="chapter != null" >
        chapter,
      </if>
      <if test="videoName != null" >
        video_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="videoId != null" >
        #{videoId,jdbcType=INTEGER},
      </if>
      <if test="course!=null&amp;&amp;course.courseId != null" >
        #{course.courseId,jdbcType=INTEGER},
      </if>
      <if test="chapter != null" >
        #{chapter,jdbcType=VARCHAR},
      </if>
      <if test="videoName != null" >
        #{videoName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.njnu.bean.Video" >
    update video
    <set >
      <if test="course!=null&amp;&amp;course.courseId != null" >
        course_id = #{course.courseId,jdbcType=INTEGER},
      </if>
      <if test="chapter != null" >
        chapter = #{chapter,jdbcType=VARCHAR},
      </if>
      <if test="videoName != null" >
        video_name = #{videoName,jdbcType=VARCHAR},
      </if>
    </set>
    where video_id = #{videoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.njnu.bean.Video" >
    update video
    set course_id = #{course.courseId,jdbcType=INTEGER},
      chapter = #{chapter,jdbcType=VARCHAR},
      video_name = #{videoName,jdbcType=VARCHAR}
    where video_id = #{videoId,jdbcType=INTEGER}
  </update>
  <select id="selectByCourseId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from video
    join course on video.course_id = course.course_id
    join category on course.category_id = category.category_id
    where course.course_id = #{courseId}
  </select>
</mapper>