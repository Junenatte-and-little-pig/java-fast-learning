<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.njnu.dao.CourseRecordMapper">
    <resultMap id="BaseResultMap" type="cn.edu.njnu.bean.CourseRecord">
        <association property="user" javaType="cn.edu.njnu.bean.User">
            <id column="user_id" property="userId"/>
            <result column="username" property="username"/>
            <result column="role" property="role"/>
        </association>
        <association property="course" javaType="cn.edu.njnu.bean.Course">
            <id column="course_id" property="courseId"/>
            <result column="course_name" property="courseName"/>
            <result column="introduction" property="introduction"/>
            <result column="note" property="note"/>
            <result column="stu_num" property="stuNum"/>
            <result column="state" property="state"/>
            <association property="category" javaType="cn.edu.njnu.bean.Category">
                <id column="category_id" property="categoryId"/>
                <result column="category" property="category"/>
            </association>
        </association>
    </resultMap>
    <sql id="Base_Column_List">
        user.user_id user_id, username, role,course.course_id course_id,course_name,
        category.category_id category_id, introduction, note, stu_num,
        course.state state, category
    </sql>
    <insert id="insert" parameterType="cn.edu.njnu.bean.CourseRecord">
        insert into course_record (user_id, course_id)
        values (#{user.userId,jdbcType=INTEGER}, #{course.courseId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="cn.edu.njnu.bean.CourseRecord">
        insert into course_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="user!=null&amp;&amp;user.userId != null">
                user_id,
            </if>
            <if test="course!=null&amp;&amp;course.courseId != null">
                course_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="user!=null&amp;&amp;user.userId != null">
                #{user.userId,jdbcType=INTEGER},
            </if>
            <if test="course!=null&amp;&amp;course.courseId != null">
                #{course.courseId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="queryAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user join course_record on user.user_id = course_record.user_id
        join course on course_record.course_id = course.course_id
        join category on course.category_id = category.category_id
    </select>
    <select id="queryByUserId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user join course_record on user.user_id = course_record.user_id
        join course on course_record.course_id = course.course_id
        join category on course.category_id = category.category_id
        where user.user_id = #{userId} and course.state = 1
    </select>
    <select id="queryUnselectedByUserId" resultMap="BaseResultMap">
        select
        course.course_id course_id,course_name,
        category.category_id category_id, introduction, note, stu_num,
        course.state state, category
        from course
        join category
        join user
        where course.course_id not in
        (select course_record.course_id from course_record
            where course_record.user_id = #{userId}) and course.state = 1
			and course.category_id=category.category_id
            and user.user_id=#{userId}
    </select>
    <delete id="delete">
        delete from course_record
        where user_id = #{user.userId} and course_id = #{course.courseId}
    </delete>
</mapper>